// Generated by CoffeeScript 1.12.4
(function() {
  var CorsHandler, ErrorHandler, RoutesLoader, app, bodyParser, config, express, logEnv, logger, path;

  express = require('express');

  path = require('path');

  logger = require('morgan');

  bodyParser = require('body-parser');

  config = require('./config/config.js');

  ErrorHandler = require('./core/handlers/error-handler.js');

  CorsHandler = require('./core/handlers/cors-handler.js');

  RoutesLoader = require('./core/loaders/routes-loader.js');

  app = express();

  app.set('config', config);

  app.disable('x-powered-by');

  app.use(function(req, res, next) {
    res.setHeader('Content-Type', 'application/json');
    next();
  });

  app.use('*.coffee', function(req, res) {
    var err;
    console.log("[Blocked] Access to coffeescript %s %s", req.method, req.url);
    err = ErrorHandler.createError('Forbidden', {
      status: 403
    });
    return ErrorHandler.displayError(res, err, req.app.get('config').env);
  });

  app.use("/public", express["static"](path.join(__dirname, 'public')));

  app.use(bodyParser.json({
    extended: true
  }));

  app.use(bodyParser.urlencoded({
    extended: false
  }));

  app.use(CorsHandler.allowDomain('*'));

  app.use(ErrorHandler.resRenderer);

  app.use("/public", ErrorHandler.displayAppError(ErrorHandler.createError('Not Found', {
    status: 404
  })));

  logEnv = config.env === 'development' ? 'dev' : 'tiny';

  app.use(logger(logEnv, {}));

  RoutesLoader.loadRoutes(path.join(__dirname, config.appDir, 'routes'));

  RoutesLoader.registerRoutes(app);

  app.use(ErrorHandler.createAppError('Not Found', {
    status: 404
  }));

  app.use(ErrorHandler.displayAppError());

  module.exports = app;

}).call(this);

//# sourceMappingURL=app.js.map
