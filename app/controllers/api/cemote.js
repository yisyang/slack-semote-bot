// Generated by CoffeeScript 1.12.4
(function() {
  var controller, request;

  request = require('request');

  controller = {};

  controller.index = function(req, res) {
    var action, cmd, data, optional, parts, ref, ref1, ref2, target, text;
    data = req.app.get('config').data;
    if (!req.body || !req.body.text) {
      return res._cc.fail("Text must be provided.", 400);
    }
    if (req.body.token !== req.app.get('config').token) {
      return res._cc.fail("Unauthorized token.", 401);
    }
    text = req.body.text;
    parts = text.split(' ');
    cmd = parts[0];
    target = (ref = parts[1]) != null ? ref : '';
    optional = parts[2] ? parts.slice(2).join(' ') : '';
    if (!data[cmd]) {
      return res.json({
        text: "Emote \"" + cmd + "\" cannot be found."
      });
    }
    if (target === '') {
      action = 0;
    } else if (target === 'me') {
      if (optional === '') {
        action = 2;
      } else {
        action = 3;
      }
    } else if (target.substr(0, 1) === '@' || target.substr(0, 2) === '<@') {
      if (optional === '') {
        action = 4;
      } else {
        action = 5;
      }
    } else {
      target = '';
      optional = parts.slice(1).join(' ');
      action = 1;
    }
    text = data[cmd][action].replace(new RegExp('{{ user }}', 'g'), '<@' + ((ref1 = req.body.user_id) != null ? ref1 : '') + '|' + ((ref2 = req.body.user_name) != null ? ref2 : '') + '>');
    text = text.replace(new RegExp('{{ target }}', 'g'), target);
    text = text.replace(new RegExp('{{ optional }}', 'g'), optional);
    request.post(req.body.response_url, {
      json: {
        response_type: "in_channel",
        text: text
      }
    }, function(error, response, body) {});
    return res.send('');
  };

  controller.help = function(req, res) {
    return res.json({
      text: "No help right now."
    });
  };

  controller.list = function(req, res) {
    return res.json({
      text: "TODO"
    });
  };

  controller.search = function(req, res) {
    return res.json({
      text: "This will involve ES, so leave for future.",
      body: req.body
    });
  };

  module.exports = controller;

}).call(this);

//# sourceMappingURL=cemote.js.map
